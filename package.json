{
    "name": "calva-fmt",
    "displayName": "Calva Clojure Formatter",
    "description": "Clojure and ClojureScript formatter for Visual Studio Code",
    "version": "0.0.35",
    "publisher": "cospaia",
    "engines": {
        "vscode": "^1.20.0"
    },
    "categories": [
        "Programming Languages",
        "Formatters"
    ],
    "keywords": [
        "Clojure",
        "ClojureScript",
        "EDN",
        "Formatting",
        "Pretty"
    ],
    "icon": "assets/calva-fmt.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/BetterThanTomorrow/calva-fmt.git"
    },
    "galleryBanner": {
        "color": "#344D81",
        "theme": "dark"
    },
    "badges": [
        {
            "url": "https://img.shields.io/badge/clojurians-editors-blue.svg?logo=slack",
            "href": "https://clojurians.slack.com/messages/editors/",
            "description": "Also find us in the #editors channel"
        },
        {
            "url": "https://img.shields.io/badge/clojurians-calva--dev-blue.svg?logo=slack",
            "href": "https://clojurians.slack.com/messages/calva-dev/",
            "description": "Let's talk in the #calva-dev channel on the Clojurians Slack"
        }
    ],
    "activationEvents": [
        "onLanguage:clojure"
    ],
    "main": "./out/calva-fmt/extension",
    "contributes": {
        "grammars": [
            {
                "language": "clojure",
                "scopeName": "source.clojure",
                "path": "./clojure.tmLanguage.json"
            }
        ],
        "commands": [
            {
                "command": "calva-fmt.formatCurrentForm",
                "title": "Format Current Form",
                "category": "Calva Format"
            },
            {
                "command": "calva-fmt.alignCurrentForm",
                "title": "Format and Align Current Form (recursively, experimental)",
                "category": "Calva Format"
            },
            {
                "command": "calva-fmt.inferParens",
                "title": "Infer Parens (from the indentation)",
                "category": "Calva Format"
            },
            {
                "command": "calva-fmt.tabIndent",
                "title": "Indent Line",
                "category": "Calva Format"
            },
            {
                "command": "calva-fmt.tabDedent",
                "title": "Dedent Line",
                "category": "Calva Format"
            }
        ],
        "keybindings": [
            {
                "command": "calva-fmt.formatCurrentForm",
                "key": "tab",
                "when": "editorLangId == clojure && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
            },
            {
                "command": "calva-fmt.alignCurrentForm",
                "key": "ctrl+alt+l",
                "when": "editorLangId == clojure && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
            },
            {
                "command": "calva-fmt.inferParens",
                "key": "ctrl+alt+p",
                "when": "editorLangId == clojure && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
            },
            {
                "command": "calva-fmt.tabIndent",
                "key": "ctrl+i",
                "when": "editorLangId == clojure && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
            },
            {
                "command": "calva-fmt.tabDedent",
                "key": "shift+ctrl+i",
                "when": "editorLangId == clojure && editorTextFocus && !editorReadOnly && !suggestWidgetVisible && !hasOtherSuggestions"
            }
        ],
        "configuration": [
            {
                "title": "calva-fmt",
                "type": "object",
                "properties": {
                    "calva.fmt.indentation": {
                        "type": "boolean",
                        "default": true,
                        "description": "Correct the indentation of your code?"
                    },
                    "calva.fmt.removeSurroundingWhitespace": {
                        "type": "boolean",
                        "default": true,
                        "description": "Remove whitespace surrounding inner forms? This will convert ( foo ) to (foo)."
                    },
                    "calva.fmt.removeTrailingWhitespace": {
                        "type": "boolean",
                        "default": true,
                        "description": "Remove trailing whitespace in lines? This will convert (foo) \\n to (foo)\\n."
                    },
                    "calva.fmt.insertMissingWhitespace": {
                        "type": "boolean",
                        "default": true,
                        "description": "Insert whitespace missing from between elements? This will convert (foo(bar)) to (foo (bar))."
                    },
                    "calva.fmt.removeConsecutiveBlankLines": {
                        "type": "boolean",
                        "default": false,
                        "description": "Squeeze consecutive blank lines to one?"
                    },
                    "calva.fmt.formatAsYouType": {
                        "type": "boolean",
                        "default": true,
                        "description": "Auto-adjust indentation and format as you type (only on enter, currently)?"
                    },
                    "calva.fmt.newIndentEngine": {
                        "type": "boolean",
                        "default": false,
                        "description": "Help beta test the new indent engine (it is MUCH faster than the previous one)."
                    },
                    "calva.fmt.allgnMapItems": {
                        "type": "boolean",
                        "default": false,
                        "description": "Align map items in columns? (Experimental)"
                    }
                }
            }
        ],
        "configurationDefaults": {
            "[clojure]": {
                "editor.wordSeparators": "\t ()\"':,;~@#$%^&{}[]`",
                "editor.autoClosingBrackets": "always",
                "editor.autoClosingQuotes": "always",
                "editor.formatOnType": true,
                "editor.autoIndent": true,
                "editor.formatOnPaste": true,
                "files.trimTrailingWhitespace": false
            }
        }
    },
    "scripts": {
        "watch-ts": "tsc -watch -p ./",
        "release": "tsc -p ./",
        "compile": "tsc -p ./",
        "vscode:prepublish": "npm run release",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "node ./node_modules/vscode/bin/test",
        "update-grammar": "node ./build/update-grammar.js PEZ/language-clojure grammars/clojure.cson ./clojure.tmLanguage.json"
    },
    "devDependencies": {
        "@types/mocha": "^5.2.5",
        "@types/node": "^10.12.9",
        "ajv": "^6.5.5",
        "eslint": "^5.9.0",
        "mocha": "^5.2.0",
        "typescript": "^3.1.6",
        "vscode": "^1.1.21",
        "cson-parser": "^1.3.3",
        "fast-plist": "^0.1.2"
    },
    "dependencies": {
        "@cospaia/calva-lib": "0.0.21",
        "immutable": "^3.8.1",
        "immutable-cursor": "^2.0.1",
        "npm": "^6.5.0"
    },
    "license": "MIT"
}